"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * imagesLoaded PACKAGED v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

!function (e, t) {
  "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", t) : "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = t() : e.EvEmitter = t();
}("undefined" != typeof window ? window : undefined, function () {
  function e() {}var t = e.prototype;return t.on = function (e, t) {
    if (e && t) {
      var i = this._events = this._events || {},
          n = i[e] = i[e] || [];return n.indexOf(t) == -1 && n.push(t), this;
    }
  }, t.once = function (e, t) {
    if (e && t) {
      this.on(e, t);var i = this._onceEvents = this._onceEvents || {},
          n = i[e] = i[e] || {};return n[t] = !0, this;
    }
  }, t.off = function (e, t) {
    var i = this._events && this._events[e];if (i && i.length) {
      var n = i.indexOf(t);return n != -1 && i.splice(n, 1), this;
    }
  }, t.emitEvent = function (e, t) {
    var i = this._events && this._events[e];if (i && i.length) {
      i = i.slice(0), t = t || [];for (var n = this._onceEvents && this._onceEvents[e], o = 0; o < i.length; o++) {
        var r = i[o],
            s = n && n[r];s && (this.off(e, r), delete n[r]), r.apply(this, t);
      }return this;
    }
  }, t.allOff = function () {
    delete this._events, delete this._onceEvents;
  }, e;
}), function (e, t) {
  "use strict";
  "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function (i) {
    return t(e, i);
  }) : "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = t(e, require("ev-emitter")) : e.imagesLoaded = t(e, e.EvEmitter);
}("undefined" != typeof window ? window : undefined, function (e, t) {
  function i(e, t) {
    for (var i in t) {
      e[i] = t[i];
    }return e;
  }function n(e) {
    if (Array.isArray(e)) return e;var t = "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && "number" == typeof e.length;return t ? d.call(e) : [e];
  }function o(e, t, r) {
    if (!(this instanceof o)) return new o(e, t, r);var s = e;return "string" == typeof e && (s = document.querySelectorAll(e)), s ? (this.elements = n(s), this.options = i({}, this.options), "function" == typeof t ? r = t : i(this.options, t), r && this.on("always", r), this.getImages(), h && (this.jqDeferred = new h.Deferred()), void setTimeout(this.check.bind(this))) : void a.error("Bad element for imagesLoaded " + (s || e));
  }function r(e) {
    this.img = e;
  }function s(e, t) {
    this.url = e, this.element = t, this.img = new Image();
  }var h = e.jQuery,
      a = e.console,
      d = Array.prototype.slice;o.prototype = Object.create(t.prototype), o.prototype.options = {}, o.prototype.getImages = function () {
    this.images = [], this.elements.forEach(this.addElementImages, this);
  }, o.prototype.addElementImages = function (e) {
    "IMG" == e.nodeName && this.addImage(e), this.options.background === !0 && this.addElementBackgroundImages(e);var t = e.nodeType;if (t && u[t]) {
      for (var i = e.querySelectorAll("img"), n = 0; n < i.length; n++) {
        var o = i[n];this.addImage(o);
      }if ("string" == typeof this.options.background) {
        var r = e.querySelectorAll(this.options.background);for (n = 0; n < r.length; n++) {
          var s = r[n];this.addElementBackgroundImages(s);
        }
      }
    }
  };var u = { 1: !0, 9: !0, 11: !0 };return o.prototype.addElementBackgroundImages = function (e) {
    var t = getComputedStyle(e);if (t) for (var i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(t.backgroundImage); null !== n;) {
      var o = n && n[2];o && this.addBackground(o, e), n = i.exec(t.backgroundImage);
    }
  }, o.prototype.addImage = function (e) {
    var t = new r(e);this.images.push(t);
  }, o.prototype.addBackground = function (e, t) {
    var i = new s(e, t);this.images.push(i);
  }, o.prototype.check = function () {
    function e(e, i, n) {
      setTimeout(function () {
        t.progress(e, i, n);
      });
    }var t = this;return this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? void this.images.forEach(function (t) {
      t.once("progress", e), t.check();
    }) : void this.complete();
  }, o.prototype.progress = function (e, t, i) {
    this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded, this.emitEvent("progress", [this, e, t]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, e), this.progressedCount == this.images.length && this.complete(), this.options.debug && a && a.log("progress: " + i, e, t);
  }, o.prototype.complete = function () {
    var e = this.hasAnyBroken ? "fail" : "done";if (this.isComplete = !0, this.emitEvent(e, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
      var t = this.hasAnyBroken ? "reject" : "resolve";this.jqDeferred[t](this);
    }
  }, r.prototype = Object.create(t.prototype), r.prototype.check = function () {
    var e = this.getIsImageComplete();return e ? void this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image(), this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), void (this.proxyImage.src = this.img.src));
  }, r.prototype.getIsImageComplete = function () {
    return this.img.complete && this.img.naturalWidth;
  }, r.prototype.confirm = function (e, t) {
    this.isLoaded = e, this.emitEvent("progress", [this, this.img, t]);
  }, r.prototype.handleEvent = function (e) {
    var t = "on" + e.type;this[t] && this[t](e);
  }, r.prototype.onload = function () {
    this.confirm(!0, "onload"), this.unbindEvents();
  }, r.prototype.onerror = function () {
    this.confirm(!1, "onerror"), this.unbindEvents();
  }, r.prototype.unbindEvents = function () {
    this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
  }, s.prototype = Object.create(r.prototype), s.prototype.check = function () {
    this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url;var e = this.getIsImageComplete();e && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents());
  }, s.prototype.unbindEvents = function () {
    this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
  }, s.prototype.confirm = function (e, t) {
    this.isLoaded = e, this.emitEvent("progress", [this, this.element, t]);
  }, o.makeJQueryPlugin = function (t) {
    t = t || e.jQuery, t && (h = t, h.fn.imagesLoaded = function (e, t) {
      var i = new o(this, e, t);return i.jqDeferred.promise(h(this));
    });
  }, o.makeJQueryPlugin(), o;
});
'use strict';

jQuery(function ($) {
  'use strict';

  var cursor = document.querySelector('.cursor');
  var showCustomCursor = document.querySelectorAll('.show-custom-cursor');

  var mouseX = null;
  var mouseY = null;

  document.addEventListener('mousemove', function (e) {
    mouseX = e.clientX;
    mouseY = e.clientY;
  });

  var render = function render() {
    cursor.style.transform = 'matrix(1, 0, 0, 1, ' + mouseX + ', ' + mouseY + ')';

    showCustomCursor.forEach(function (item) {
      item.addEventListener('mouseover', function (e) {
        cursor.classList.add('hover');
        if (e.target.classList.contains('default-cursor')) {
          cursor.classList.remove('hover');
        }
      });
      item.addEventListener('mouseleave', function () {
        cursor.classList.remove('hover');
      });
    });

    requestAnimationFrame(render);
  };

  render();
});
'use strict';

jQuery(function ($) {
    'use strict';

    var carousels = function carousels() {
        $('.carousel').on('init', function (event, slick) {}).slick({
            infinite: true,
            speed: 1500,
            autoplay: true,
            autoplaySpeed: 4800,
            pauseOnHover: false,
            arrows: false,
            fade: true,
            cssEase: 'linear'
        }).on('beforeChange', function (event, slick, currentSlide, nextSlide) {}).on('afterChange', function (event, slick, currentSlide) {});

        $('[data-slide]').click(function () {
            var actIndex = $(this).data('slide');
            var slider = $('.carousel');
            slider[0].slick.slickGoTo(parseInt(actIndex));
        });
    };

    var wordSplitter = function wordSplitter() {
        var wordSpitting = Splitting();
        var textSpitting = $('.text__spliting');
        Splitting({
            target: textSpitting,
            by: "chars",
            key: null
        });
    };

    if (document.body.classList.contains('home')) {
        carousels();
        wordSplitter();
    }
});
'use strict';

jQuery(function ($) {
    'use strict';

    var imagePopup = function imagePopup() {
        $('.open-img').magnificPopup({
            type: 'image',
            tLoading: 'Loading image #%curr%...',
            fixedContentPos: true,
            fixedBgPos: true,
            overflowY: 'auto',
            closeBtnInside: true,
            preloader: false,
            midClick: true,
            removalDelay: 300,
            // mainClass: 'my-mfp-zoom-in'
            gallery: {
                enabled: true,
                navigateByImgClick: true,
                preload: [0, 1] // Will preload 0 - before current, and 1 after the current image
            },
            zoom: {
                enabled: true,
                duration: 300, // duration of the effect, in milliseconds
                easing: 'ease-in-out' // CSS transition easing function
            }
        });
    };

    if (document.body.classList.contains('single')) {
        imagePopup();
    }
});
'use strict';

jQuery(function ($) {
    'use strict';

    var carousels = function carousels() {
        var scroller = new LocomotiveScroll();
        var slider = new BeerSlider(document.getElementById("beer-slider"));

        $('.slider-for').slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            draggable: true,
            dots: true,
            arrows: false,
            asNavFor: '.slider-nav',
            adaptiveHeight: true,
            fade: true,
            speed: 900,
            infinite: true,
            cssEase: 'cubic-bezier(0.7, 0, 0.3, 1)',
            touchThreshold: 100
        }).on("beforeChange", function () {
            scroller.update();
        });

        $('.slider-nav').slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            asNavFor: '.slider-for',
            focusOnSelect: true,
            arrows: false,
            fade: true,
            adaptiveHeight: true
        });
    };

    if (document.body.classList.contains('page-template-restoration')) {
        carousels();
    }
});
'use strict';

jQuery(function ($) {
    'use strict';

    var pressPageGrid = function pressPageGrid() {
        var grid = document.querySelector('.grid');

        var scroller = new LocomotiveScroll();

        var msnry = new Masonry(grid, {
            itemSelector: '.grid-item',
            columnWidth: '.grid-sizer',
            gutter: 40,
            percentPosition: true
        });

        imagesLoaded(grid).on('progress', function () {
            msnry.layout();
            scroller.update();
        });
    };

    // const popupGallery = () => {
    //     $('.popup-gallery').map(function () {
    //         let th = $(this);
    //         th.magnificPopup({
    //             delegate: 'a',
    //             type: 'image',
    //             tLoading: 'Loading image #%curr%...',
    //             mainClass: 'my-mfp-zoom-in',
    //             gallery: {
    //                 enabled: true,
    //                 navigateByImgClick: true,
    //                 preload: [0,1] // Will preload 0 - before current, and 1 after the current image
    //             },
    //             zoom: {
    //                 enabled: true,
    //                 duration: 300, // duration of the effect, in milliseconds
    //                 easing: 'ease-in-out', // CSS transition easing function
    //             },
    //             image: {
    //                 tError: '<a href="%url%">The image #%curr%</a> could not be loaded.',
    //             }
    //         });
    //     })
    // }


    if (document.body.classList.contains('page-template-press')) {
        pressPageGrid();
        // popupGallery();
    }
});
'use strict';

jQuery(function ($) {
  'use strict';

  var scrollOptions = {
    el: document.querySelector('[data-scroll-container]'),
    smooth: true,
    repeat: false,
    reloadOnContextChange: true
  };
  var header = $('.header');

  // Scroller scripts
  var scroller = new LocomotiveScroll(scrollOptions);

  scroller.on('scroll', function (instance) {

    if (instance.scroll.y > 100) {
      header.addClass('fixed');
    } else {
      header.removeClass('fixed');
    }
  });

  $('body').imagesLoaded(function () {
    scroller.update();
  });

  var menuFunc = function menuFunc() {
    var openMenu = jQuery('.open-menu'),
        closeMenu = jQuery('.close-menu'),
        openSubMenu = jQuery('.open-sub-menu'),
        closeSubMenu = jQuery('.close-sub-menu');

    openMenu.on('click', function () {
      openMenu.addClass('hidden');
      closeMenu.fadeIn(200);
      jQuery('.st-container').addClass('st-effect-3  st-menu-open');
      jQuery('header').addClass('menu-open');
      jQuery('html').addClass('overflow-hidden');
    });

    closeMenu.on('click', function () {
      closeMenu.fadeOut(200);
      openMenu.removeClass('hidden');
      jQuery('.st-container').removeClass('st-effect-3  st-menu-open');
      jQuery('header').removeClass('menu-open');
      jQuery('html').removeClass('overflow-hidden');

      setTimeout(function () {
        jQuery('.st-menu__container').removeClass('sub-menu-open');
      }, 500);
    });

    openSubMenu.on('click', function () {
      jQuery('.st-menu__container').addClass('sub-menu-open');
    });

    closeSubMenu.on('click', function () {
      jQuery('.st-menu__container').removeClass('sub-menu-open');
    });
  };
  var homeHeroImgToggle = function homeHeroImgToggle() {
    $('.home-hero__img').click(function () {});

    var heroItem = $('.home-hero__item');
    var toggleItem = function toggleItem(th) {
      var currentType = th.data('type');
      $('.home-hero__desktop-buttons a').hide().removeClass('active');
      $('.home-hero__desktop-buttons [data-link="' + currentType + '"]').addClass('active').fadeIn();
    };
    heroItem.map(function () {
      var th = $(this);
      if (th.hasClass('active')) {
        toggleItem(th);
      }

      th.click(function () {
        var thImage = th.find('.home-hero__img').attr('src');
        $('.home-hero__bg').css('background-image', 'url(' + thImage + ')');

        heroItem.removeClass('active');
        th.addClass('active');

        toggleItem(th);
      });
    });

    if (heroItem.hasClass('active')) {}
  };

  var scrollBar = function scrollBar() {
    $('.scroll-bar__content').map(function () {
      new SimpleBar($(this)[0], {
        autoHide: false,
        scrollbarMaxSize: 210
      });
      scroller.update();
    });
  };

  var scrollNext = function scrollNext() {
    $('.scroll-next').on('click', function () {
      var cls = $('.s-product').offset().top;
      scroller.scrollTo(cls);
    });
  };

  var popupGallery = function popupGallery() {
    $('.popup-gallery').map(function () {
      var th = $(this);
      th.magnificPopup({
        delegate: 'a',
        type: 'image',
        tLoading: 'Loading image #%curr%...',
        mainClass: 'my-mfp-zoom-in',
        gallery: {
          enabled: true,
          navigateByImgClick: true,
          preload: [0, 1] // Will preload 0 - before current, and 1 after the current image
        },
        zoom: {
          enabled: true,
          duration: 300, // duration of the effect, in milliseconds
          easing: 'ease-in-out' // CSS transition easing function
        },
        image: {
          tError: '<a href="%url%">The image #%curr%</a> could not be loaded.'
        }
      });
    });
  };

  if (document.body.classList.contains('page-template-press') || document.body.classList.contains('home')) {
    popupGallery();
  }

  //  Functions For all Pages
  menuFunc();
  scrollBar();

  // Functions with scroller for single pages
  if (document.body.classList.contains('home')) {
    homeHeroImgToggle();
  }

  if (document.body.classList.contains('single')) {
    scrollNext();
  }

  document.addEventListener("DOMContentLoaded", function (event) {
    scroller.update();
    blockWelcome();
  });
});

// const disableFixedHeader = [''];

// const viewportWidth = window.innerWidth;
// const lazy = () => {
//     document.addEventListener('lazyloaded', (e) => {
//         e.target.parentNode.classList.add('image-loaded');
//         e.target.parentNode.classList.remove('loading');
//         scroller.update();
//     });
// }
// lazy();